import "~/styles/globals.css";

import { type Metadata } from "next";
import { SessionProvider } from "next-auth/react";
import { Geist } from "next/font/google";
import { ErrorBoundary } from "react-error-boundary";
import { Toaster } from "sonner";

import GlobalErrorFallback from "~/features/shared/components/GlobalErrorFallback";
import ReusableErrorBoundary from "~/features/shared/components/ReusableErrorBoundary";
import { TRPCReactProvider } from "~/trpc/react";

export const metadata: Metadata = {
  title: "Create T3 App",
  description: "Generated by create-t3-app",
  icons: [{ rel: "icon", url: "/favicon.ico" }],
};

const geist = Geist({
  subsets: ["latin"],
  variable: "--font-geist-sans",
});

export default function RootLayout({
  children,
}: Readonly<{ children: React.ReactNode }>) {
  return (
    <html lang="en" className={`${geist.variable}`}>
      <body>
        <ReusableErrorBoundary FallbackComponent={GlobalErrorFallback}>
          <TRPCReactProvider>
            <SessionProvider>{children}</SessionProvider>
          </TRPCReactProvider>
          <Toaster />
        </ReusableErrorBoundary>
      </body>
    </html>
  );
}
